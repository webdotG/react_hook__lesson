import React from "react";

//основная задача useeffect это дать понять что сейчас компонент что-то сделал еапример обновился
//внедрил новую кнопку или удалил её 
//и она будет либо отоброжена на странице
//либо наоброт пропадёт со траницы

function UseEffects() {

  const [numbers, setNumbers] = React.useState([1, 2, 3])
  const [count, setCont] = React.useState(0)

  const addNumber = () => {
    const nextNumber = numbers.length + 1;
    setNumbers([...numbers, nextNumber])
  }

//обращаюсь к библиотеке react и вызываю дефолтеый метод библиотеки useeffect
  //передаб в этот метод анонимную фуекцию которая будет вызываться когда что-то произойдёт
  //например компонент обновился или ьыл впервые отоброжен на страницу или был удален
  //и то что надо будет сделать при этом будет хранить в себе анонимная функция
  //вторым аргументом useeffect получает зависимость и смотря какая зависимость 
  //от этого useeffect решает как он будет работать
  //---если useeffect вторым аргументом получает пустой массив [] то он понимает 
  //что ни за какими изминениями следмит не надо и он отработает всего раз 
  //когда компонент отоброзится на странице (как componentdidmount)  
  //---если вторым аргументом(зависимостью) ничего не передать
  //то use effect будет следить за компонентом при каждои изминении и когда впервые отобразится на странице
  //--если я хочу что бы useeffect следил за какойто переменной при ее изменениях
  //то я передаю ее (вторым аргументом) в зависимость в квадратные скобки [somevariable]
  //за которыми надо следить
  React.useEffect( () => {
    console.log('компонент был обновлён')
  }, [numbers, count])
  
  return (
    <div>
    <h1>useEffect example</h1>
    <h3>отоброжаю счётчик count: {count}</h3>
    <button onClick={() => setCont( count + 1 )}>count + </button>
    <ul>
        {
          numbers.map((number, index) =>
            (<li key={index}>{number}</li>))
        }
      </ul>
      <button onClick={addNumber} >next number</button>
          
    </div>
  )
};

export default UseEffects;
